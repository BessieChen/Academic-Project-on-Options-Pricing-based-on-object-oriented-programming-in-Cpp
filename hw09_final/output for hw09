Q1
   double S0=106.0;
   double r=0.03;
   double sigma=0.2;
   double T=1.0;
   double K=100.0;
   int N1=12;
   cout << setiosflags(ios::fixed) << setprecision(4);

   BSModel Model(S0,r,sigma);

   EurCall CallOption(T/N1,K);
   EurPut PutOption(T/N1,K);

   long N2=30000;
   cout << "Eur Call Price = "
           << CallOption.PriceByMC(Model,N2) << endl;

   cout << "Eur Put Price = "
           << PutOption.PriceByMC(Model,N2) << endl;


Q2

   double S0=100., r=0.03, sigma=0.2;
   BSModel Model(S0,r,sigma);

   double T=1.0/12.0, K=100.0;
   int m=30;
   ArthmAsianCall Option(T,K,m);

   long N=30000;
   double epsilon=0.001;
   Option.PriceByMC(Model,N,epsilon);
   cout << "Asian Call Price = " << Option.Price << endl
        << "   Pricing Error = " << Option.PricingError << endl
        << "           delta = " << Option.delta << endl
        << "           gamma = " << Option.gamma << endl;


Q3


   double S0=100.0, r=0.03, sigma=0.2;
   BSModel Model(S0,r,sigma);

   double T =1.0/12.0, K=100.0;
   int m=30;

   ArthmAsianCall Option(T,K,m);
   GmtrAsianCall  CVOption(T,K,m);

   long N=30000;
   double epsilon =0.001;
   Option.PriceByVarRedMC(Model,N,CVOption,epsilon);
   cout << "Arithmetic call price = " << Option.Price << endl
        << "Error = " << Option.PricingError << endl
        << "delta = " << Option.delta << endl << endl;

   Option.PriceByMC(Model,N,epsilon);
   cout << "Price by direct MC = " << Option.Price << endl
        << "Error = " << Option.PricingError << endl
        << "delta = " << Option.delta << endl;
